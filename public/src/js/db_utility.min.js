const DBU_STORE_NAME_POSTS="posts",DBU_STORE_NAME_SYNC_POSTS="sync-posts",dbPromise=idb.open("posts-store",1,t=>{t.objectStoreNames.contains("posts")||t.createObjectStore("posts",{keyPath:"id"}),t.objectStoreNames.contains("sync-posts")||t.createObjectStore("sync-posts",{keyPath:"id"})});function writeData(t,e){return dbPromise.then(r=>{const o=r.transaction(t,"readwrite");return o.objectStore(t).put(e),o.complete})}function readAllData(t){return dbPromise.then(e=>{return e.transaction(t,"readonly").objectStore(t).getAll()})}function clearAllData(t){return dbPromise.then(e=>{const r=e.transaction(t,"readwrite");return r.objectStore(t).clear(),r.complete})}function deleteItemFromData(t,e){dbPromise.then(r=>{const o=r.transaction(t,"readwrite");return o.objectStore(t).delete(e),o.complete}).then(()=>{console.log("Item deleted id",e)})}function urlBase64ToUint8Array(t){const e=(t+"=".repeat((4-t.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),r=window.atob(e),o=new Uint8Array(r.length);for(let t=0;t<r.length;++t)o[t]=r.charCodeAt(t);return o}function dataURItoBlob(t){const e=atob(t.split(",")[1]),r=t.split(",")[0].split(":")[1].split(";")[0],o=new ArrayBuffer(e.length);let n=new Uint8Array(o);for(var a=0;a<e.length;a++)n[a]=e.charCodeAt(a);return new Blob([o],{type:r})}